<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper   
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"  
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd"> 

<mapper namespace="com.dy.dao.UserDao">
   <!-- 对应userDao中的insertUser方法，  -->
   <insert id="insertUser" parameterType="com.dy.entity.User">
   		<!-- oracle等不支持id自增长的，可根据其id生成策略，先获取id 
   		
		<selectKey resultType="int" order="BEFORE" keyProperty="id">
      		select seq_user_id.nextval as id from dual
    	</selectKey>
    	
    	--> 
    	
    	<!-- mysql插入数据后，获取id -->
    	<selectKey keyProperty="id" resultType="int" order="AFTER" >
   			SELECT LAST_INSERT_ID() as id
   		</selectKey>
    	  
   		insert into user(id, name, password, age, deleteFlag) 
   			values(#{id}, #{name}, #{password}, #{age}, #{deleteFlag})
   </insert>
   
   <!-- 对应userDao中的updateUser方法 -->
   <update id="updateUser" parameterType="com.dy.entity.User">
   		update user set name = #{name}, password = #{password}, age = #{age}, deleteFlag = #{deleteFlag}
   			where id = #{id};
   </update>
    
   <!-- 对应userDao中的deleteUser 方法 --> 
   <delete id="deleteUser" parameterType="com.dy.entity.User">
   		delete from user where id = #{id};
   </delete>
    
    <!-- 
    <insert id="insertUser" parameterType="UserEntity" keyProperty="id" useGeneratedKeys="true">
    	
    	<selectKey keyProperty="id" resultType="int" order="AFTER" >
   			SELECT LAST_INSERT_ID() as id
   		</selectKey>
    
   		insert into user(name, password, age) 
   			values(#{name}, #{password}, #{age})
   </insert>
    -->
   

</mapper>